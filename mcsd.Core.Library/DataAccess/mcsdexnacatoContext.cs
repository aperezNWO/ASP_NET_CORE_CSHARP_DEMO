// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace mcsd.Core.Library
{
    public partial class mcsdexnacatoContext : DbContext
    {
        public mcsdexnacatoContext()
        {
        }

        public mcsdexnacatoContext(DbContextOptions<mcsdexnacatoContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Pagina> Pagina { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<accessLogs> accessLogs { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=mcsdexnacato.mssql.somee.com;Initial Catalog=mcsdexnacato;Persist Security Info=True;User ID=aperezNWO_SQLLogin_1;Password=nnsh89yjyc");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Pagina>(entity =>
            {
                entity.HasKey(e => e.IdPagina)
                    .HasName("PK__Pagina__034F88B831405E78");

                entity.Property(e => e.NombrePagina)
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Persona>(entity =>
            {
                entity.HasKey(e => e.ID_column)
                    .HasName("PK__Persona__1E5A0B8E12D9E3CD");

                entity.Property(e => e.NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.ProfesionOficio)
                    .IsRequired()
                    .HasMaxLength(256);
            });

            modelBuilder.Entity<accessLogs>(entity =>
            {
                entity.HasKey(e => e.ID_column)
                    .HasName("PK__accessLo__1E5A0B8E83FFD5A0");

                entity.Property(e => e.AccessDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(hour,(1),getdate()))");

                entity.Property(e => e.IpValue)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PageName)
                    .IsRequired()
                    .HasMaxLength(128);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}