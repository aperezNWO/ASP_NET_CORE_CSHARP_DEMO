{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/asyncprog/asyncprog.component.ts","./src/app/asyncprog/asyncprog.component.html","./src/app/datatable/datatable.component.ts","./src/app/datatable/datatable.component.html","./src/app/lista/lista.component.html","./src/app/lista/lista.component.ts","./src/app/loginfo.service.ts","./src/app/loginfoview/loginfoview.component.ts","./src/app/loginfoview/loginfoview.component.html","./src/app/observable/observable.component.ts","./src/app/observable/observable.component.html","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n//\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n//\r\nexport class AppComponent {\r\n  title = '[ANGULAR ASYNC PROGRAMMING]';\r\n}\r\n","<div id=\"content\">\r\n  <h1>{{title}}</h1>\r\n  <nav>\r\n    <a routerLink=\"/observable\">Observable</a>\r\n    | <a routerLink=\"/asyncprog\">RxJS</a>   \r\n    <!--| <a routerLink=\"/datatable\">Tabla Estatica</a>--> \r\n    <!--| <a routerLink=\"/dynamictable\">Tabla Dinámica</a>-->\r\n    <!--| <a routerLink=\"/lista\">Lista Dinámica</a>-->\r\n  </nav>\r\n  <hr>\r\n  <router-outlet></router-outlet>\r\n  <hr>\r\n</div>\r\n","import { NgModule                } from '@angular/core';\r\nimport { RouterModule            } from '@angular/router';\r\nimport { MatListModule           } from '@angular/material/list';\r\nimport { MatTableModule          } from '@angular/material/table';\r\nimport { MatPaginatorModule      } from '@angular/material/paginator';\r\nimport { BrowserModule           } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule     } from '@angular/common/http';\r\nimport { AppComponent         } from './app.component';\r\nimport { LogInfoViewComponent } from './loginfoview/loginfoview.component';\r\nimport { ListaComponent       } from './lista/lista.component';\r\nimport { DatatableComponent   } from './datatable/datatable.component';\r\nimport { ObservableComponent  } from './observable/observable.component';\r\nimport { AsyncprogComponent   } from './asyncprog/asyncprog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,   \r\n    MatListModule,\r\n    RouterModule.forRoot([\r\n      {  path: 'lista'          , component: ListaComponent           },\r\n      {  path: 'datatable'      , component: DatatableComponent       },\r\n      {  path: 'dynamictable'   , component: LogInfoViewComponent     }, \r\n      {  path: 'observable'     , component: ObservableComponent      },   \r\n      {  path: 'asyncprog'      , component: AsyncprogComponent       },         \r\n    ])\r\n  ],\r\n  declarations: [AppComponent, LogInfoViewComponent, ListaComponent, DatatableComponent, ObservableComponent, AsyncprogComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\nimport { from, fromEvent, interval } from 'rxjs';\n//\n@Component({\n  selector: 'app-asyncprog',\n  templateUrl: './asyncprog.component.html',\n  styleUrls: ['./asyncprog.component.css']\n})\n//\nexport class AsyncprogComponent {\n   //\n   title : string = \"[Angular RxJS]\";\n   //\n   constructor()\n   {\n      //\n      this.RxJSTest01();\n      //\n      this.RxJSTest02();\n   }\n   //\n   RxJSTest01():void{\n      //\n      let url : string = \"https://learningpath.somee.com/demos/generarinformejson\";\n      // Create an Observable out of a promise\n      let data = from(fetch(url));\n      // Subscribe to begin listening for async result\n      data.subscribe({\n        next(response) { console.log(response); },\n        error(err) { console.error('Error: ' + err); },\n        complete() { console.log('Completed'); }\n      });\n   }\n   //\n   RxJSTest02():void{\n      /*\n      // Create an Observable that will publish a value on an interval\n      const secondsCounter = interval(1000);\n      // Subscribe to begin publishing values\n      const subscription   = secondsCounter.subscribe(n =>\n        console.log(`It's been ${n + 1} seconds since subscribing!`));*/\n   }\n}","<h1>{{title}}</h1>\n<hr>\n    <a href=\"javascript:void window.open('https://angular.io/guide/observables')\">Go to Reference</a>\n<hr>\n","import { AfterViewInit, Component, OnInit, ViewChild  } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator       } from '@angular/material/paginator';\nimport { Observable         } from 'rxjs';\nimport { LogEntry           } from '../loginfo.model';\nimport { LogInfoService     } from '../loginfo.service';\n\n@Component({\n  selector: 'app-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.scss']\n})\n//\nexport class DatatableComponent implements OnInit, AfterViewInit {\n  //\n  title               : string   = '[Material Table with local static source and pagination]';\n  //\n  displayedColumns    : string[] = ['id_Column', 'pageName', 'accessDate', 'ipValue'];\n  //\n  dataSource          = new MatTableDataSource<LogEntry>;\n  //\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  //\n  constructor(private logInfoService: LogInfoService) {\n      //\n  }\n  //\n  ngOnInit(): void {\n    //\n    this.dataSource           = new MatTableDataSource<LogEntry>(ELEMENT_DATA_LOCAL);\n  }\n  //\n  ngAfterViewInit() {\n    //\n    this.dataSource.paginator = this.paginator;\n  }\n}\nconst ELEMENT_DATA_LOCAL : LogEntry[] = [\n {id_Column:\"99825\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-13T18:53:15.35\",ipValue:\"69.63.184.3\"}\n,{id_Column:\"99824\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-13T18:53:14.897\",ipValue:\"69.63.184.1\"}\n,{id_Column:\"99823\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-13T15:26:44.203\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99822\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-13T14:10:32.08\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99821\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-13T13:17:03.44\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99820\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-13T13:16:58.11\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99819\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-13T13:16:37.577\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99818\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-13T13:16:30.83\",ipValue:\"181.48.33.178\"}\n,{id_Column:\"99817\",pageName:\"PAGE_DIJKSTRA_DEMO.\" ,accessDate:\"2023-01-13T12:12:29.763\",ipValue:\"40.77.167.23\"}\n,{id_Column:\"99816\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T23:51:05.343\",ipValue:\"31.13.127.13\"}\n,{id_Column:\"99815\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T23:50:32.743\",ipValue:\"31.13.127.118\"}\n,{id_Column:\"99814\",pageName:\"PAGE_DIJKSTRA_DEMO.\" ,accessDate:\"2023-01-12T21:55:31.353\",ipValue:\"38.43.130.68\"}\n,{id_Column:\"99813\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T21:55:23.93\",ipValue:\"38.43.130.68\"}\n,{id_Column:\"99812\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-12T21:55:11.95\",ipValue:\"38.43.130.68\"}\n,{id_Column:\"99811\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T21:50:25.653\",ipValue:\"38.43.130.68\"}\n,{id_Column:\"99810\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T20:34:24.193\",ipValue:\"191.99.1.33\"}\n,{id_Column:\"99809\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T19:59:40.7\",ipValue:\"40.77.167.54\"}\n,{id_Column:\"99808\",pageName:\"ANGULAR_DEMO\"        ,accessDate:\"2023-01-12T19:41:11.03\",ipValue:\"20.25.14.9\"}\n,{id_Column:\"99807\",pageName:\"PAGE_CSV_ASYNC_DEMO\" ,accessDate:\"2023-01-12T19:32:04.617\",ipValue:\"207.46.13.167\"}\n,{id_Column:\"99806\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-12T19:25:09.76\",ipValue:\"132.184.130.224\"}\n,{id_Column:\"99805\",pageName:\"PAGE_DEMO_INDEX\"     ,accessDate:\"2023-01-12T19:25:01.837\",ipValue:\"132.184.130.224\"}\n];\n","<h1>{{title}}</h1>\n<div class=\"mat-elevation-z8\">\n<div class=\"scrollbar\">\n<table  mat-table  [dataSource]=\"dataSource\"  class=\"mat-elevation-z8\" aria-label=\"informeloglocal\">\n  <ng-container matColumnDef=\"id_Column\">\n    <th mat-header-cell *matHeaderCellDef>id_Column</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.id_Column}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"pageName\">\n    <th mat-header-cell *matHeaderCellDef>pageName</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.pageName }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"accessDate\">\n    <th mat-header-cell *matHeaderCellDef>accessDate</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.accessDate }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"ipValue\">\n    <th mat-header-cell *matHeaderCellDef>ipValue</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.ipValue }}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n</div>\n<br>\n<hr>\n<br>\n<mat-paginator [length]=\"100\"\n              [pageSize]=\"10\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              aria-label=\"informeloglocal\">\n</mat-paginator>\n</div>","<h2>{{title}}</h2>\n<div class=\"scrollbar\">\n<mat-nav-list>\n  <mat-list-item class=\"loginfo\" *ngFor=\"let logEntry of informeLogLocal | async\">\n    <mat-list-item class=\"loginfo_item\">{{logEntry.id_Column}} | {{logEntry.accessDate | date }}</mat-list-item>\n  </mat-list-item>\n</mat-nav-list>\n</div>","import { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit        } from '@angular/core';\nimport { Observable               } from 'rxjs';\nimport { LogEntry                 } from '../loginfo.model';\nimport { LogInfoService           } from '../loginfo.service';\n//\n@Component({\n  selector: 'app-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\n//\nexport class ListaComponent implements OnInit {\n    //\n    title = '[Material list with json/http local source]';\n    //\n    informeLogLocal!   : Observable<LogEntry[]>;\n    //\n    constructor(private logInfoService: LogInfoService) {\n        //\n        this.informeLogLocal =  this.logInfoService.getLogLocal(); \n        //\n        console.log(\"LOADING DATA : \" + JSON.stringify(this.informeLogLocal));\n    }\n    //\n    ngOnInit(): void {\n        //\n    }\n}","import { Injectable          } from '@angular/core';\r\nimport { HttpClient          } from '@angular/common/http';\r\nimport { LogEntry            } from './loginfo.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LogInfoService {\r\n  //\r\n  //ELEMENT_DATA_LOCAL:  LogEntry[] = [];\r\n  //\r\n  //ELEMENT_DATA_LOCAL_: LogEntry[] = [];\r\n  //\r\n  //private _loginfo = new BehaviorSubject([]);\r\n  //\r\n  constructor(    private http: HttpClient  ) {\r\n      //\r\n  }\r\n  //\r\n  /*\r\n  get loginfo() {\r\n    return this._loginfo.asObservable()\r\n  }*/\r\n  // \r\n  /*\r\n  updateLogInfo() {\r\n    //\r\n    let url = 'https://learningpath.somee.com/demos/generarinformejson';\r\n    //\r\n    this.http.get<LogEntry[]>(url).forEach(\r\n      p_logInfo =>{\r\n        //this._loginfo.next(p_logInfo);\r\n      }\r\n    )\r\n    //   \r\n    console.log(\"ELEMENT_DATA_LOCAL from http/json : \" + this.ELEMENT_DATA_LOCAL);\r\n  }*/\r\n  //\r\n  getLogLocal() {\r\n      //\r\n      let url='../assets/loginfo.json'\r\n      //    \r\n      return this.http.get<LogEntry[]>(url);\r\n  }\r\n  //\r\n  getLogRemoto() {\r\n    //\r\n    let url = 'https://learningpath.somee.com/demos/generarinformejson';\r\n    // \r\n    return this.http.get<LogEntry[]>(url);   \r\n  }\r\n\r\n}\r\n\r\n","import { AfterViewInit, Component, OnInit, ViewChild  } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator       } from '@angular/material/paginator';\r\nimport { BehaviorSubject, Observable, tap         } from 'rxjs';\r\nimport { LogEntry           } from '../loginfo.model';\r\nimport { LogInfoService     } from '../loginfo.service';\r\n//\r\n@Component({\r\n  selector: 'loginfoview-app',\r\n  templateUrl: './loginfoview.component.html',\r\n  styleUrls: ['./loginfoview.component.scss']\r\n})\r\n//\r\nexport class LogInfoViewComponent implements OnInit, AfterViewInit {\r\n  //\r\n  title = '[Material Table with json/http remote source and pagination]';\r\n  //\r\n  informeLogRemoto!                  : Observable<LogEntry[]>;\r\n  //\r\n  dataSource                         = new MatTableDataSource<LogEntry>();\r\n  // \r\n  displayedColumns                   : string[] = ['id_Column', 'pageName', 'accessDate', 'ipValue'];\r\n  //\r\n  private _loginfo                   = new BehaviorSubject([]);\r\n  //\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  //\r\n  constructor(private logInfoService: LogInfoService) {\r\n    //\r\n    this.informeLogRemoto = this.logInfoService.getLogRemoto();\r\n    //\r\n    const myObserver = {\r\n      next: (p_logEntry: LogEntry[])     => { \r\n        //\r\n        console.log('Observer got a next value: ' + JSON.stringify(p_logEntry));\r\n        //\r\n        this.dataSource           = new MatTableDataSource<LogEntry>(p_logEntry);\r\n        this.dataSource.paginator = this.paginator;\r\n      },\r\n      error: (err: Error)       => console.error('Observer got an error: ' + err),\r\n      complete: () => console.log('Observer got a complete notification'),\r\n    };\r\n    //\r\n    this.informeLogRemoto.subscribe(myObserver);\r\n  }\r\n  //\r\n  ngOnInit(): void {\r\n      //\r\n  }\r\n  //\r\n  ngAfterViewInit() {\r\n    //\r\n  }\r\n  //\r\n  update() {\r\n    //\r\n  }\r\n}\r\n","<h1>{{title}}</h1>\r\n<div class=\"mat-elevation-z8\">\r\n<div class=\"scrollbar\">\r\n<table  mat-table  [dataSource]=\"dataSource\"  class=\"mat-elevation-z8\" aria-label=\"informeloglocal\">\r\n  <ng-container matColumnDef=\"id_Column\">\r\n    <th mat-header-cell *matHeaderCellDef>id_Column</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.id_Column}}</td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"pageName\">\r\n    <th mat-header-cell *matHeaderCellDef>pageName</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.pageName }}</td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"accessDate\">\r\n    <th mat-header-cell *matHeaderCellDef>accessDate</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.accessDate }}</td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"ipValue\">\r\n    <th mat-header-cell *matHeaderCellDef>ipValue</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.ipValue }}</td>\r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n</table>\r\n</div>\r\n<br>\r\n<hr>\r\n<br>\r\n<mat-paginator [length]=\"100\"\r\n              [pageSize]=\"10\"\r\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n              aria-label=\"informeloglocal\">\r\n</mat-paginator>\r\n</div>","import { Component } from '@angular/core';\nimport { from, fromEvent, interval, Observable, Observer, of } from 'rxjs';\n//\n@Component({\n  selector: 'app-observable',\n  templateUrl: './observable.component.html',\n  styleUrls: ['./observable.component.css']\n})\n//\nexport class ObservableComponent {\n    //\n    title : string = \"[Angular Observable]\";\n    //\n    constructor()\n    {\n        //\n        this.ObservableTest01();\n        //\n        this.ObservableTest02();\n        //\n        this.ObservableTest03();\n        //\n        this.ObservableTest04();\n        //\n        this.ObservableTest05();\n        //\n        this.ObservableTest06();\n    }\n    //\n    ObservableTest01():void\n    {\n        // Create simple observable that emits three values\n        const myObservable = of(1, 2, 3);\n\n        // Create observer object\n        const myObserver = {\n          next: (x: number) => console.log('Observer got a next value: ' + x),\n          error: (err: Error) => console.error('Observer got an error: ' + err),\n          complete: () => console.log('Observer got a complete notification'),\n        };\n\n        // Execute with the observer object\n        myObservable.subscribe(myObserver);\n\n        // Logs:\n        // Observer got a next value: 1\n        // Observer got a next value: 2\n        // Observer got a next value: 3\n        // Observer got a complete notification\n\n        myObservable.subscribe(\n          x => console.log('Observer got a next value: ' + x),\n          err => console.error('Observer got an error: ' + err),\n          () => console.log('Observer got a complete notification')\n        );\n\n        // Logs:\n        // Observer got a next value: 1\n        // Observer got a next value: 2\n        // Observer got a next value: 3\n        // Observer got a complete notification\n    }\n    //\n    ObservableTest02():void\n    {\n        // execute the Observable and print the result of each notification\n        sequence_1.subscribe({\n          next(num) { console.log(num); },\n          complete() { console.log('Finished sequence'); }\n        });\n\n        // Logs:\n        // 1\n        // 2\n        // 3\n        // Finished sequence\n    }\n    //\n    ObservableTest03():void{\n      //\n      sequence_2.subscribe({\n          next(num) { console.log(num); },\n          complete() { console.log('Finished sequence'); }\n      });\n    }\n    //\n    ObservableTest04():void{\n      /*\n      // Subscribe starts the clock, and will emit after 1 second\n      sequence_3.subscribe({\n        next(num) { console.log('1st subscribe: ' + num); },\n        complete() { console.log('1st sequence finished.'); }\n      });\n\n      // After 1/2 second, subscribe again.\n      setTimeout(() => {\n        sequence_3.subscribe({\n          next(num) { console.log('2nd subscribe: ' + num); },\n          complete() { console.log('2nd sequence finished.'); }\n        });\n      }, 500);*/\n      // Logs:\n      // (at 1 second): 1st subscribe: 1\n      // (at 1.5 seconds): 2nd subscribe: 1\n      // (at 2 seconds): 1st subscribe: 2\n      // (at 2.5 seconds): 2nd subscribe: 2\n      // (at 3 seconds): 1st subscribe: 3\n      // (at 3 seconds): 1st sequence finished\n      // (at 3.5 seconds): 2nd subscribe: 3\n      // (at 3.5 seconds): 2nd sequence finished\n    }\n    //\n    ObservableTest05():void{\n      /*\n      // Subscribe starts the clock, and begins to emit after 1 second\n      multicastSequence.subscribe({\n        next(num) { console.log('1st subscribe: ' + num); },\n        complete() { console.log('1st sequence finished.'); }\n      });\n\n      // After 1 1/2 seconds, subscribe again (should \"miss\" the first value).\n      setTimeout(() => {\n        multicastSequence.subscribe({\n          next(num) { console.log('2nd subscribe: ' + num); },\n          complete() { console.log('2nd sequence finished.'); }\n        });\n      }, 1500);\n      */\n      // Logs:\n      // (at 1 second): Emitting 1\n      // (at 1 second): 1st subscribe: 1\n      // (at 2 seconds): Emitting 2\n      // (at 2 seconds): 1st subscribe: 2\n      // (at 2 seconds): 2nd subscribe: 2\n      // (at 3 seconds): Emitting 3\n      // (at 3 seconds): 1st subscribe: 3\n      // (at 3 seconds): 2nd subscribe: 3\n      // (at 3 seconds): 1st sequence finished\n      // (at 3 seconds): 2nd sequence finished\n    }\n    //\n    ObservableTest06():void{\n        /*\n        const ESC_CODE     = 'Escape';\n        const nameInput    = document.getElementById('name') as HTMLInputElement;\n        const subscription = fromEvent(nameInput, 'keydown').subscribe(\n          (e: any) => {\n              //\n              //if (e.code === ESC_CODE) {\n              //    nameInput.value = '';\n              //}\n          });*/\n    }\n}\n\n// This function runs when subscribe() is called\nfunction sequenceSubscriber_01(observer: Observer<number>) {\n      // synchronously deliver 1, 2, and 3, then complete\n      observer.next(1);\n      observer.next(2);\n      observer.next(3);\n      observer.complete();\n      // unsubscribe function doesn't need to do anything in this\n      // because values are delivered synchronously\n      return {unsubscribe() {}};\n}\n//\nfunction sequenceSubscriber_02(observer: Observer<number>) {\n      //\n      const seq = [1, 2, 3];\n      let timeoutId: any;\n\n      // Will run through an array of numbers, emitting one value\n      // per second until it gets to the end of the array.\n      function doInSequence(arr: number[], idx: number) {\n        timeoutId = setTimeout(() => {\n          observer.next(arr[idx]);\n          if (idx === arr.length - 1) {\n            observer.complete();\n          } else {\n            doInSequence(arr, ++idx);\n          }\n        }, 1000);\n      }\n\n      //\n      doInSequence(seq, 0);\n\n      // Unsubscribe should clear the timeout to stop execution\n      return {\n        unsubscribe() {\n          clearTimeout(timeoutId);\n        }\n  };\n}\n//\nfunction multicastSequenceSubscriber() {\n  const seq = [1, 2, 3];\n  // Keep track of each observer (one for every active subscription)\n  const observers: Observer<unknown>[] = [];\n  // Still a single timeoutId because there will only ever be one\n  // set of values being generated, multicasted to each subscriber\n  let timeoutId: any;\n\n  // Return the subscriber function (runs when subscribe()\n  // function is invoked)\n  return (observer: Observer<unknown>) => {\n    observers.push(observer);\n    // When this is the first subscription, start the sequence\n    if (observers.length === 1) {\n      const multicastObserver: Observer<number> = {\n        next(val) {\n          // Iterate through observers and notify all subscriptions\n          observers.forEach(obs => obs.next(val));\n        },\n        error() { // handle error \n        },\n        complete() {\n          // Notify all complete callbacks\n          observers.slice(0).forEach(obs => obs.complete());\n        }\n      };\n      doSequence(multicastObserver, seq, 0);\n    }\n    //\n    return {\n      unsubscribe() {\n        // Remove from the observers array so it's no longer notified\n        observers.splice(observers.indexOf(observer), 1);\n        // If there's no more listeners, do cleanup\n        if (observers.length === 0) {\n          clearTimeout(timeoutId);\n        }\n      }\n    };\n\n    // Run through an array of numbers, emitting one value\n    // per second until it gets to the end of the array.\n    function doSequence(sequenceObserver: Observer<number>, arr: number[], idx: number) {\n      timeoutId = setTimeout(() => {\n        console.log('Emitting ' + arr[idx]);\n        sequenceObserver.next(arr[idx]);\n        if (idx === arr.length - 1) {\n          sequenceObserver.complete();\n        } else {\n          doSequence(sequenceObserver, arr, ++idx);\n        }\n      }, 1000);\n    }\n  };\n}\n\n// Create a new Observable that will deliver the above sequence\nconst sequence_1        = new Observable(sequenceSubscriber_01);\n\n// Create a new Observable that will deliver the above sequence\nconst sequence_2        = new Observable(sequenceSubscriber_02);\n\n// Create a new Observable that will deliver the above sequence\nconst sequence_3        = new Observable(sequenceSubscriber_02);\n\n// Create a new Observable that will deliver the above sequence\nconst multicastSequence = new Observable(multicastSequenceSubscriber());\n","<h1>{{title}}</h1>\n<hr>\n    <a href=\"javascript:void window.open('https://angular.io/guide/observables')\">Go to Reference</a>\n<hr>","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["AppComponent","constructor","selectors","decls","vars","consts","template","i0","RouterModule","MatListModule","MatTableModule","MatPaginatorModule","BrowserModule","BrowserAnimationsModule","HttpClientModule","LogInfoViewComponent","ListaComponent","DatatableComponent","ObservableComponent","AsyncprogComponent","AppModule","bootstrap","forRoot","path","component","declarations","imports","from","RxJSTest01","RxJSTest02","url","data","fetch","subscribe","next","response","console","log","error","err","complete","MatTableDataSource","MatPaginator","logInfoService","ngOnInit","dataSource","ELEMENT_DATA_LOCAL","ngAfterViewInit","paginator","viewQuery","id_Column","pageName","accessDate","ipValue","informeLogLocal","getLogLocal","JSON","stringify","LogInfoService","http","get","getLogRemoto","factory","providedIn","BehaviorSubject","informeLogRemoto","myObserver","p_logEntry","update","Observable","of","ObservableTest01","ObservableTest02","ObservableTest03","ObservableTest04","ObservableTest05","ObservableTest06","myObservable","x","sequence_1","num","sequence_2","sequenceSubscriber_01","observer","unsubscribe","sequenceSubscriber_02","seq","timeoutId","doInSequence","arr","idx","setTimeout","length","clearTimeout","multicastSequenceSubscriber","observers","push","multicastObserver","val","forEach","obs","slice","doSequence","splice","indexOf","sequenceObserver","sequence_3","multicastSequence","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}